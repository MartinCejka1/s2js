#include "sc2api/sc2_api.h"
#include "sc2lib/sc2_lib.h"
#include <stdlib.h>
#include "unit_classes.h"

using namespace sc2;

namespace Util {

uint8_t GetResourceClass(const sc2::Unit* unit) {
  const UnitTypeID &type_id = unit->unit_type;
  switch(type_id.ToType()) {
    case UNIT_TYPEID::NEUTRAL_BATTLESTATIONMINERALFIELD:
    case UNIT_TYPEID::NEUTRAL_BATTLESTATIONMINERALFIELD750:
    case UNIT_TYPEID::NEUTRAL_MINERALFIELD:
    case UNIT_TYPEID::NEUTRAL_MINERALFIELD750:
    case UNIT_TYPEID::NEUTRAL_LABMINERALFIELD:
    case UNIT_TYPEID::NEUTRAL_RICHMINERALFIELD:
    case UNIT_TYPEID::NEUTRAL_RICHMINERALFIELD750:
    case UNIT_TYPEID::NEUTRAL_PURIFIERMINERALFIELD:
    case UNIT_TYPEID::NEUTRAL_PURIFIERMINERALFIELD750:
    case UNIT_TYPEID::NEUTRAL_PURIFIERRICHMINERALFIELD:
    case UNIT_TYPEID::NEUTRAL_PURIFIERRICHMINERALFIELD750:
      return MINERAL;
    case UNIT_TYPEID::NEUTRAL_PROTOSSVESPENEGEYSER:
    case UNIT_TYPEID::NEUTRAL_PURIFIERVESPENEGEYSER:
    case UNIT_TYPEID::NEUTRAL_RICHVESPENEGEYSER:
    case UNIT_TYPEID::NEUTRAL_SHAKURASVESPENEGEYSER:
    case UNIT_TYPEID::NEUTRAL_SPACEPLATFORMGEYSER:
    case UNIT_TYPEID::NEUTRAL_VESPENEGEYSER:
      return GEYSER;
  }
  throw "Cannot get resource type for non-resource unit";
}

std::vector<uint8_t> GetUnitClasses(const sc2::Unit* unit) {
  const UnitTypeID &type_id = unit->unit_type;
  switch(type_id.ToType()) {
    // === NEUTRAL ===
    case UNIT_TYPEID::NEUTRAL_BATTLESTATIONMINERALFIELD:
    case UNIT_TYPEID::NEUTRAL_BATTLESTATIONMINERALFIELD750:
    case UNIT_TYPEID::NEUTRAL_MINERALFIELD:
    case UNIT_TYPEID::NEUTRAL_MINERALFIELD750:
    case UNIT_TYPEID::NEUTRAL_LABMINERALFIELD:
    case UNIT_TYPEID::NEUTRAL_RICHMINERALFIELD:
    case UNIT_TYPEID::NEUTRAL_RICHMINERALFIELD750:
    case UNIT_TYPEID::NEUTRAL_PURIFIERMINERALFIELD:
    case UNIT_TYPEID::NEUTRAL_PURIFIERMINERALFIELD750:
    case UNIT_TYPEID::NEUTRAL_PURIFIERRICHMINERALFIELD:
    case UNIT_TYPEID::NEUTRAL_PURIFIERRICHMINERALFIELD750:
      return { MINERAL };
    case UNIT_TYPEID::NEUTRAL_PROTOSSVESPENEGEYSER:
    case UNIT_TYPEID::NEUTRAL_PURIFIERVESPENEGEYSER:
    case UNIT_TYPEID::NEUTRAL_RICHVESPENEGEYSER:
    case UNIT_TYPEID::NEUTRAL_SHAKURASVESPENEGEYSER:
    case UNIT_TYPEID::NEUTRAL_SPACEPLATFORMGEYSER:
    case UNIT_TYPEID::NEUTRAL_VESPENEGEYSER:
      return { GEYSER };
      
    // === TERRAN ===
    // WORKERS
    case UNIT_TYPEID::TERRAN_SCV:
    case UNIT_TYPEID::TERRAN_MULE:
      return { GROUND, WORKER };
    // FOOD PROVIDERS
    case UNIT_TYPEID::TERRAN_SUPPLYDEPOT:
    case UNIT_TYPEID::TERRAN_SUPPLYDEPOTLOWERED:
      return { GROUND, STRUCTURE, PROVIDES_FOOD };
    // TOWN HALLS
    case UNIT_TYPEID::TERRAN_COMMANDCENTER:
    case UNIT_TYPEID::TERRAN_ORBITALCOMMAND:
      return { GROUND, STRUCTURE, TOWN_HALL };
    case UNIT_TYPEID::TERRAN_PLANETARYFORTRESS:
      return { GROUND, STRUCTURE, TOWN_HALL, ATTACKS_GROUND };
    // GAS STRUCTURES
    case UNIT_TYPEID::TERRAN_REFINERY:
      return { GROUND, STRUCTURE, GAS_STRUCTURE };
    // TRAINING STRUCTURES
    case UNIT_TYPEID::TERRAN_BARRACKS:
    case UNIT_TYPEID::TERRAN_BARRACKSREACTOR:
    case UNIT_TYPEID::TERRAN_FACTORY:
    case UNIT_TYPEID::TERRAN_FACTORYREACTOR:
    case UNIT_TYPEID::TERRAN_GHOSTACADEMY:
    case UNIT_TYPEID::TERRAN_STARPORT:
    case UNIT_TYPEID::TERRAN_STARPORTREACTOR:
      return { GROUND, STRUCTURE, TRAINS_UNITS };
    // UPGRADE STRUCTURES
    case UNIT_TYPEID::TERRAN_ARMORY:
    case UNIT_TYPEID::TERRAN_BARRACKSTECHLAB:
    case UNIT_TYPEID::TERRAN_ENGINEERINGBAY:
    case UNIT_TYPEID::TERRAN_FACTORYTECHLAB:
    case UNIT_TYPEID::TERRAN_FUSIONCORE:
    case UNIT_TYPEID::TERRAN_STARPORTTECHLAB:
      return { GROUND, STRUCTURE, UPGRADES_UNITS };
    case UNIT_TYPEID::TERRAN_REACTOR:
    case UNIT_TYPEID::TERRAN_TECHLAB:
      return { GROUND, STRUCTURE };
    // FLYING STRUCTURES
    case UNIT_TYPEID::TERRAN_BARRACKSFLYING:
    case UNIT_TYPEID::TERRAN_COMMANDCENTERFLYING:
    case UNIT_TYPEID::TERRAN_FACTORYFLYING:
    case UNIT_TYPEID::TERRAN_STARPORTFLYING:
    case UNIT_TYPEID::TERRAN_ORBITALCOMMANDFLYING:
      return { AIR };
    // GROUND ARMY UNITS
    case UNIT_TYPEID::TERRAN_WIDOWMINE:
      return { GROUND };
    case UNIT_TYPEID::TERRAN_MARINE:
    case UNIT_TYPEID::TERRAN_CYCLONE:
    case UNIT_TYPEID::TERRAN_THOR:
    case UNIT_TYPEID::TERRAN_WIDOWMINEBURROWED:
      return { GROUND, ATTACKS_GROUND, ATTACKS_AIR };
    case UNIT_TYPEID::TERRAN_HELLION:
    case UNIT_TYPEID::TERRAN_HELLIONTANK:
    case UNIT_TYPEID::TERRAN_MARAUDER:
    case UNIT_TYPEID::TERRAN_AUTOTURRET:
    case UNIT_TYPEID::TERRAN_VIKINGASSAULT:
    case UNIT_TYPEID::TERRAN_SIEGETANK:
    case UNIT_TYPEID::TERRAN_SIEGETANKSIEGED:
    case UNIT_TYPEID::TERRAN_REAPER:
      return { GROUND, ATTACKS_GROUND };
    case UNIT_TYPEID::TERRAN_GHOST:
      return { GROUND, ATTACKS_GROUND, CLOAKING };
    // AIR ARMY UNITS
    case UNIT_TYPEID::TERRAN_MEDIVAC:
      return { AIR, SUPPORTS_UNITS, TRANSPORTS_UNITS };
    case UNIT_TYPEID::TERRAN_BANSHEE:
      return { AIR, ATTACKS_GROUND, CLOAKING };
    case UNIT_TYPEID::TERRAN_BATTLECRUISER:
      return { AIR, ATTACKS_GROUND, ATTACKS_AIR };
    case UNIT_TYPEID::TERRAN_LIBERATORAG:
      return { AIR, ATTACKS_GROUND };
    case UNIT_TYPEID::TERRAN_LIBERATOR:
    case UNIT_TYPEID::TERRAN_VIKINGFIGHTER:
      return { AIR, ATTACKS_AIR };
    case UNIT_TYPEID::TERRAN_RAVEN:
      return { AIR, DETECTOR, ATTACKS_GROUND, ATTACKS_AIR };
    case UNIT_TYPEID::TERRAN_POINTDEFENSEDRONE:
      return { AIR, SUPPORTS_UNITS };
    // DEFENSIVE STRUCTURES
    case UNIT_TYPEID::TERRAN_BUNKER:
      return { GROUND, STRUCTURE, ATTACKS_GROUND, ATTACKS_AIR };
    case UNIT_TYPEID::TERRAN_MISSILETURRET:
      return { GROUND, STRUCTURE, ATTACKS_AIR };
    case UNIT_TYPEID::TERRAN_SENSORTOWER:
      return { GROUND, STRUCTURE };
    // BOMBS
    case UNIT_TYPEID::TERRAN_KD8CHARGE:
    case UNIT_TYPEID::TERRAN_NUKE:
      return { BOMB };
      
    // === ZERG ===
    // WORKERS
    case UNIT_TYPEID::ZERG_DRONE:
      return { GROUND, WORKER };
    case UNIT_TYPEID::ZERG_DRONEBURROWED:
      return { GROUND, WORKER, CLOAKING };
    // FOOD PROVIDERS
    case UNIT_TYPEID::ZERG_OVERLORD:
      return { AIR, PROVIDES_FOOD };
    case UNIT_TYPEID::ZERG_OVERLORDCOCOON:
    case UNIT_TYPEID::ZERG_TRANSPORTOVERLORDCOCOON:
      return { AIR, PROVIDES_FOOD, SPAWNING };
    case UNIT_TYPEID::ZERG_OVERLORDTRANSPORT:
      return { AIR, PROVIDES_FOOD, TRANSPORTS_UNITS };
    case UNIT_TYPEID::ZERG_OVERSEER:
      return { AIR, PROVIDES_FOOD, DETECTOR };
    // GAS STRUCTURES
    case UNIT_TYPEID::ZERG_EXTRACTOR:
      return { GROUND, STRUCTURE, GAS_STRUCTURE };
    // TOWN HALLS
    case UNIT_TYPEID::ZERG_HATCHERY:
    case UNIT_TYPEID::ZERG_LAIR:
    case UNIT_TYPEID::ZERG_HIVE:
      return { GROUND, STRUCTURE, TOWN_HALL, TRAINS_UNITS };
    // LARVAE, EGGS, COCOONS
    case UNIT_TYPEID::ZERG_LARVA:
      return { GROUND, TRAINS_UNITS };
    case UNIT_TYPEID::ZERG_BANELINGCOCOON:
    case UNIT_TYPEID::ZERG_RAVAGERCOCOON:
    case UNIT_TYPEID::ZERG_EGG:
    case UNIT_TYPEID::ZERG_INFESTEDTERRANSEGG:
    case UNIT_TYPEID::ZERG_LURKERMPEGG:
      return { GROUND, SPAWNING };
    case UNIT_TYPEID::ZERG_BROODLORDCOCOON:
      return { AIR, SPAWNING };
    // UPGRADE STRUCTURES
    case UNIT_TYPEID::ZERG_BANELINGNEST:
    case UNIT_TYPEID::ZERG_SPIRE:
    case UNIT_TYPEID::ZERG_ROACHWARREN:
    case UNIT_TYPEID::ZERG_SPAWNINGPOOL:
    case UNIT_TYPEID::ZERG_EVOLUTIONCHAMBER:
    case UNIT_TYPEID::ZERG_GREATERSPIRE:
    case UNIT_TYPEID::ZERG_HYDRALISKDEN:
    case UNIT_TYPEID::ZERG_INFESTATIONPIT:
    case UNIT_TYPEID::ZERG_LURKERDENMP:
    case UNIT_TYPEID::ZERG_ULTRALISKCAVERN:
      return { GROUND, STRUCTURE, UPGRADES_UNITS };
    // DEFENSIVE STRUCTURES
    case UNIT_TYPEID::ZERG_SPINECRAWLERUPROOTED:
    case UNIT_TYPEID::ZERG_SPORECRAWLERUPROOTED:
      return { GROUND };
    case UNIT_TYPEID::ZERG_SPINECRAWLER:
      return { GROUND, STRUCTURE, ATTACKS_GROUND };
    case UNIT_TYPEID::ZERG_SPORECRAWLER:
      return { GROUND, STRUCTURE, ATTACKS_AIR, DETECTOR };
    // CREEP TUMORS
    case UNIT_TYPEID::ZERG_CREEPTUMOR:
    case UNIT_TYPEID::ZERG_CREEPTUMORQUEEN:
      return { GROUND };
    case UNIT_TYPEID::ZERG_CREEPTUMORBURROWED:
      return { GROUND, TRAINS_UNITS, CLOAKING };
    // OTHER STRUCTURES
    case UNIT_TYPEID::ZERG_NYDUSCANAL:
    case UNIT_TYPEID::ZERG_NYDUSNETWORK:
      return { GROUND, STRUCTURE };
    // AIR ARMY UNITS
    case UNIT_TYPEID::ZERG_BROODLORD:
      return { AIR, TRAINS_UNITS };
    case UNIT_TYPEID::ZERG_CORRUPTOR:
    case UNIT_TYPEID::ZERG_MUTALISK:
    case UNIT_TYPEID::ZERG_VIPER:
      return { AIR, ATTACKS_GROUND, ATTACKS_AIR };
    case UNIT_TYPEID::ZERG_LOCUSTMPFLYING:
      return { AIR };
    // GROUND ARMY UNITS
    case UNIT_TYPEID::ZERG_QUEEN:
      return { GROUND, ATTACKS_GROUND, SUPPORTS_UNITS, TRAINS_UNITS };
    case UNIT_TYPEID::ZERG_RAVAGER:
    case UNIT_TYPEID::ZERG_HYDRALISK:
    case UNIT_TYPEID::ZERG_INFESTOR:
      return { GROUND, ATTACKS_GROUND, ATTACKS_AIR };
    case UNIT_TYPEID::ZERG_INFESTORTERRAN:
    case UNIT_TYPEID::ZERG_LOCUSTMP:
    case UNIT_TYPEID::ZERG_ROACH:
    case UNIT_TYPEID::ZERG_BROODLING:
    case UNIT_TYPEID::ZERG_BANELING:
    case UNIT_TYPEID::ZERG_LURKERMP:
    case UNIT_TYPEID::ZERG_ULTRALISK:
    case UNIT_TYPEID::ZERG_ZERGLING:
      return { GROUND, ATTACKS_GROUND };
    case UNIT_TYPEID::ZERG_SWARMHOSTMP:
      return { GROUND, TRAINS_UNITS };
    // BURROWED UNITS
    case UNIT_TYPEID::ZERG_BANELINGBURROWED:
    case UNIT_TYPEID::ZERG_HYDRALISKBURROWED:
    case UNIT_TYPEID::ZERG_INFESTORBURROWED:
    case UNIT_TYPEID::ZERG_SWARMHOSTBURROWEDMP:
    case UNIT_TYPEID::ZERG_QUEENBURROWED:
    case UNIT_TYPEID::ZERG_ROACHBURROWED:
    case UNIT_TYPEID::ZERG_ZERGLINGBURROWED:
      return { GROUND, CLOAKING };
    case UNIT_TYPEID::ZERG_LURKERMPBURROWED:
      return { GROUND, ATTACKS_GROUND, CLOAKING };
    // CHANGELINGS
    case UNIT_TYPEID::ZERG_CHANGELING:
    case UNIT_TYPEID::ZERG_CHANGELINGMARINE:
    case UNIT_TYPEID::ZERG_CHANGELINGMARINESHIELD:
    case UNIT_TYPEID::ZERG_CHANGELINGZEALOT:
    case UNIT_TYPEID::ZERG_CHANGELINGZERGLING:
    case UNIT_TYPEID::ZERG_CHANGELINGZERGLINGWINGS:
      return { GROUND };
    // BOMBS
    case UNIT_TYPEID::ZERG_PARASITICBOMBDUMMY:
      return { BOMB };
    
    // === PROTOSS ===
    // WORKERS
    case UNIT_TYPEID::PROTOSS_PROBE:
      return { GROUND, WORKER };
    // FOOD PROVIDERS
    case UNIT_TYPEID::PROTOSS_PYLON:
      return { GROUND, STRUCTURE, PROVIDES_FOOD };
    case UNIT_TYPEID::PROTOSS_PYLONOVERCHARGED:
      return { GROUND, STRUCTURE, PROVIDES_FOOD, ATTACKS_GROUND, ATTACKS_AIR };
    // TOWN HALLS
    case UNIT_TYPEID::PROTOSS_NEXUS:
      return { GROUND, STRUCTURE, TOWN_HALL, TRAINS_UNITS };
    // GAS STRUCTURES
    case UNIT_TYPEID::PROTOSS_ASSIMILATOR:
      return { GROUND, STRUCTURE, GAS_STRUCTURE };
    // TRAINING STRUCTURES
    case UNIT_TYPEID::PROTOSS_GATEWAY:
    case UNIT_TYPEID::PROTOSS_ROBOTICSFACILITY:
    case UNIT_TYPEID::PROTOSS_STARGATE:
    case UNIT_TYPEID::PROTOSS_WARPGATE:
      return { GROUND, STRUCTURE, TRAINS_UNITS };
    // UPGRADE STRUCTURES
    case UNIT_TYPEID::PROTOSS_CYBERNETICSCORE:
    case UNIT_TYPEID::PROTOSS_FORGE:
    case UNIT_TYPEID::PROTOSS_FLEETBEACON:
    case UNIT_TYPEID::PROTOSS_ROBOTICSBAY:
    case UNIT_TYPEID::PROTOSS_TEMPLARARCHIVE:
    case UNIT_TYPEID::PROTOSS_TWILIGHTCOUNCIL:
    case UNIT_TYPEID::PROTOSS_DARKSHRINE:
      return { GROUND, STRUCTURE, UPGRADES_UNITS };
    // DEFENSIVE STRUCTURES
    case UNIT_TYPEID::PROTOSS_PHOTONCANNON:
      return { GROUND, STRUCTURE, ATTACKS_GROUND, ATTACKS_AIR, DETECTOR };
    case UNIT_TYPEID::PROTOSS_SHIELDBATTERY:
      return { GROUND, STRUCTURE, SUPPORTS_UNITS };
    // GROUND ARMY UNITS
    case UNIT_TYPEID::PROTOSS_ADEPT:
    case UNIT_TYPEID::PROTOSS_ADEPTPHASESHIFT:
    case UNIT_TYPEID::PROTOSS_COLOSSUS:
    case UNIT_TYPEID::PROTOSS_DISRUPTOR:
    case UNIT_TYPEID::PROTOSS_DISRUPTORPHASED:
    case UNIT_TYPEID::PROTOSS_IMMORTAL:
    case UNIT_TYPEID::PROTOSS_ZEALOT:
      return { GROUND, ATTACKS_GROUND };
    case UNIT_TYPEID::PROTOSS_STALKER:
    case UNIT_TYPEID::PROTOSS_HIGHTEMPLAR:
    case UNIT_TYPEID::PROTOSS_ARCHON:
      return { GROUND, ATTACKS_GROUND, ATTACKS_AIR };
    case UNIT_TYPEID::PROTOSS_DARKTEMPLAR:
      return { GROUND, ATTACKS_GROUND, CLOAKING };
    case UNIT_TYPEID::PROTOSS_SENTRY:
      return { GROUND, SUPPORTS_UNITS };
    // AIR ARMY UNITS
    case UNIT_TYPEID::PROTOSS_VOIDRAY:
    case UNIT_TYPEID::PROTOSS_PHOENIX:
    case UNIT_TYPEID::PROTOSS_TEMPEST:
    case UNIT_TYPEID::PROTOSS_INTERCEPTOR:
      return { AIR, ATTACKS_GROUND, ATTACKS_AIR };
    case UNIT_TYPEID::PROTOSS_ORACLE:
      return { AIR, ATTACKS_GROUND, SUPPORTS_UNITS };
    case UNIT_TYPEID::PROTOSS_CARRIER:
      return { AIR, TRAINS_UNITS };
    case UNIT_TYPEID::PROTOSS_OBSERVER:
      return { AIR, DETECTOR, CLOAKING };
    case UNIT_TYPEID::PROTOSS_WARPPRISM:
      return { AIR, TRANSPORTS_UNITS };
    case UNIT_TYPEID::PROTOSS_WARPPRISMPHASING:
      return { AIR, TRAINS_UNITS };
    case UNIT_TYPEID::PROTOSS_MOTHERSHIP:
      return { AIR, SUPPORTS_UNITS, CLOAKING };
    case UNIT_TYPEID::PROTOSS_MOTHERSHIPCORE:
      return { AIR, ATTACKS_GROUND, SUPPORTS_UNITS };
    // BOMBS
    case UNIT_TYPEID::PROTOSS_ORACLESTASISTRAP:
      return { BOMB };
  }
  return {};
}

}